@model Repository.EntityModel.author

@{
    ViewBag.Title = "Create";
}

<h2>Skapa</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal col-md-8">
        <h4><a href="/AuthorAdmin">Författare</a></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Förnamn", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Efternamn", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Födelseår", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthYear, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.BirthYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Skapa" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        //$("#create_author_form").parsley({
        //    trigger: 'change',
        //    successClass: "has-success",
        //    errorClass: "has-error",
        //    classHandler: function (el) {
        //        return el.$element.closest('.form-group');
        //    },
        //    errorsWrapper: '<div class="invalid-message"></div>',
        //    errorTemplate: '<span></span>',
        //});
    </script>
}